<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your Node.js application, please visit
  http://go.microsoft.com/fwlink/?LinkId=290972
  -->
<configuration>
  <appSettings>
    
    <add key="mongoURI" value="mongodb+srv://Team_TMNT:APzPksYmbgV7v2oP@cluster0.ea68s.mongodb.net/?retryWrites=true&w=majority" />
    <add key="JWTPRIVATEKEY" value="zSRwH5EjBy6iRTQdGQLWR1cjs+DimRMbsU5WKGTtcxKqV/Uglk90AjYoqL5xiBRJtMg8pjQlgShsEvzZjRNy6BNzey7AbKidZVawLXxBJ6vjKqHOVO8+mRy9/19ujierb45lMCv8Kf75X7SkSASpl68GCSZzqPwWp1qiGy/cNesGJNsGA5JTCl/eW6D6CvK2h91Fn4Qmt7ipvkstWbXNcArSpbEFuErImdF+vrQuTLMz1fNE4SoGe0Favohx0kkoErv4+0GtiXGnQo8zmB29+Lj0iDN6m+rx0OFInQqt7P4zc7x4wCTfTRL3XXGirSZ43eeQ9wPB5E1W+GWpeJHeMQ==" />
    <add key="SALT" value="12" />
    <add key="GOOGLE_API_KEY" value="AIzaSyC6_cmEUGEuyO07FMTIT8zYgvrR7uLxhuY" />
    <add key="PORT" value="7924" />
   
  </appSettings>
  <system.webServer>
    <!-- mimeMap enables IIS to serve particular file types as specified by fileExtension. -->
    <staticContent>
      <mimeMap fileExtension=".svg" mimeType="image/svg+xml" />
    </staticContent>

    <modules runAllManagedModulesForAllRequests="false" />

    <!-- Web.Debug.config adds attributes to this to enable remote debugging when publishing in Debug configuration. -->
    <iisnode watchedFiles="web.config;*.js;*.jsx;routes\*.js;"/>

    <!-- Remote debugging (Azure Website with git deploy): Comment out iisnode above, and uncomment iisnode below. -->
    <!--<iisnode watchedFiles="web.config;*.js;routes\*.js;views\*.pug"
      loggingEnabled="true"
      devErrorsEnabled="true"
      nodeProcessCommandLine="node.exe &#45;&#45;debug"/>-->

    <!-- indicates that the server.js file is a Node.js application 
    to be handled by the iisnode module -->
    <handlers>
      <add name="iisnode" path="server/server.js" verb="*" modules="iisnode" />

      <!-- Remote debugging (Azure Website with git deploy): Uncomment NtvsDebugProxy handler below.
      Additionally copy Microsoft.NodejsTools.WebRole to 'bin' from the Remote Debug Proxy folder.-->
      <!--<add name="NtvsDebugProxy" path="ntvs-debug-proxy/59ea9a82-a297-477d-86ba-dfc8c5f4801e" verb="*" resourceType="Unspecified"
        type="Microsoft.NodejsTools.Debugger.WebSocketProxy, Microsoft.NodejsTools.WebRole"/>-->
    </handlers>

    <security>
      <requestFiltering>
        <hiddenSegments>
          <remove segment="bin" />
        </hiddenSegments>
      </requestFiltering>
    </security>

    <!-- <rewrite>
      <rules>
        <clear />
        <!-- Remote debugging (Azure Website with git deploy): Uncomment the NtvsDebugProxy rule below. --> 
        <!-- <rule name="NtvsDebugProxy" enabled="true" stopProcessing="true"> 
          <match url="^ntvs-debug-proxy/.*"/> 
        </rule>  -->

        <!-- Don't interfere with requests for node-inspector debugging -->
        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^server.js\/debug[\/]?" />
        </rule>

        <rule name="app" enabled="true" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="iisnode.+" negate="true" />
          <conditions logicalGrouping="MatchAll" trackAllCaptures="false" />
          <action type="Rewrite" url="server/server.js" />
        </rule>
      </rules>
    </rewrite> -->
  </system.webServer>
  
  <!-- Remote debugging (Azure Website with git deploy): uncomment system.web below --> 
  <!-- <system.web> 
    <httpRuntime targetFramework="4.5"/> 
    <customErrors mode="Off"/> 
  </system.web>  -->
</configuration>